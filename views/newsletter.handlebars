{{!This is a part of form processing using fetch() and api/newsletter, which is the preffered method}}

<h2>Meadowlark Travel Newsletter</h2>

<div id="newsletterSignupFormContainer">
  <form class="form-horizontal" role="form" id="newsletterSignupForm">
    <input type="hidden" name="_csrf" value="{{csrf}}">
    <div class="form-group">
      <label for="fieldName" class="col-sm-2 control-label">Name</label>
      <div class="col-sm-4">
        <input type="text" class="form-control" id="fieldName" name="name">
      </div>
    </div>
    <div class="form-group">
      <label for="fieldEmail" class="col-sm-2 control-label">Email</label>
      <div class="col-sm-4">
        <input type="email" class="form-control" required id="fieldEmail" name="email">
      </div>
    </div>
    <div class="form-group">
      <div class="col-sm-offset-2 col-sm-4">
        <button type="submit" class="btn btn-primary">Register</button>
      </div>
    </div>
  </form>
</div>

{{#section 'scripts'}}
<script>
  document.getElementById('newsletterSignupForm')
    .addEventListener('submit', evt => {
      evt.preventDefault()
      const form = evt.target
      const body = JSON.stringify({
        _csrf: form.elements._csrf.value,
        name: form.elements.name.value,
        email: form.elements.email.value,
      });
      const headers = { 'Content-Type': 'application/json' }
      const container =
        document.getElementById('newsletterSignupFormContainer')
      const data = { method: 'POST', body, headers };
      
      fetch('/api/newsletter-signup', data)
        .then(resp => {
          console.log("Ran first then");
          if (resp.status < 200 || resp.status >= 300) {
            throw new Error(`Request failed with status ${resp.status}`);   
          }
          console.log("AHHH WTF ");
          console.log(JSON.stringify(data) + "Sometings");
          return JSON.stringify(data);
        })
        .then(json => {
          console.log("Ran second then");
          container.innerHTML = '<b>Thank you for signing up!</b>'
        })
        .catch(err => {
          console.log(err);
          container.innerHTML = `<b>We're sorry, we had a problem ` +
            `signing you up.  Please <a href="/newsletter">try again</a>`
        });
    });

  console.log("Ran scripts");
</script>
{{/section}}


{{!-- <div id="newsletterSignupFormContainer">
  <h2>Sign up for our newsletter to recieve news and specials!</h2>
  <form class="form-horizontal" role="form" id="newsletterSignupForm">
    <input type="hidden" name="_csrf" value="{{csrf}}">
    <div class="form-group">
      <label for="fieldName" class="col-sm-2 control-label">Name</label>
      <div class="col-sm-4">
        <input type="text" class="form-control" id="fieldName" name="name">
      </div>
    </div>
    <div class="form-group">
      <label for="fieldEmail" class="col-sm-2 control-label">Email</label>
      <div class="col-sm-4">
        <input type="email" class="form-control" required id="fieldEmail" name="email">
      </div>
    </div>
    <div class="form-group">
      <div class="col-sm-offset-2 col-sm-4">
        <button type="sumbit" class="btn btn-primary">Hook me up, broski.</button>
      </div>
    </div>
  </form>
</div>

{{#section 'scripts'}}
<script>
  document.getElementById('newsletterSignupForm').addEventListener('submit', event => {
    event.preventDefault(); // This prevents default behavior so that we can implement our own.
    const form = event.target;
    const body = JSON.stringify({
      _csrf: form.elements._csrf.value,
      name: form elements.name.value,
      email: form.elements.email.value,
    });
    const headers = { 'Content-type': 'application/json' };
    const container = document.getElementById('newsletterSignupFormContainer');
    fetch('/api/newsletter-signup', { method: 'post', body, headers })
      .then(resp => {
        if (resp.status < 200 || resp.status >= 300) {
          throw new Error('Request failed with status ' + resp.status);
        }
        return resp.json();
      })
      .then(json => {
        container.innerHTML = '<b>Thank you for signing up!</b>';
      })
      .catch(err => {
        container.innerHTML = `<b>We're sorry, we had a problem signing you up. Please <a href="/newsletter">try again</a></b<`
      });
  });
</script>
{{/section}} --}}